/*
 * Copyright (C) 2015 The greyfish authors
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

apply plugin: 'application'
mainClassName = "org.asoem.greyfish.cli.GreyfishCLIApplication"
startScripts.applicationName 'greyfish'

dependencies {
    compile 'com.google.inject:guice:3.0',
            'org.slf4j:slf4j-api:1.7.5',
            'com.google.guava:guava:16.0.1',
            'com.google.code.findbugs:jsr305:2.0.1',
            'net.sf.jopt-simple:jopt-simple:4.3'

    compile project(':greyfish-core')

    runtime 'ch.qos.logback:logback-classic:1.0.13'

    testCompile "org.hamcrest:hamcrest-library:1.3",
            "junit:junit:4.11",
            "org.mockito:mockito-core:1.9.5",
            "org.objenesis:objenesis:1.2"
}

buildscript {
    repositories {
        mavenLocal()
        mavenCentral()
    }
    dependencies {
        classpath 'net.sf.proguard:proguard-gradle:4.9'
    }
}

task installAppProguard(type: proguard.gradle.ProGuardTask) << {
    dependsOn installApp

    def installDir = file("$buildDir/install/${rootProject.name}")
    def installProguardDir = file("$buildDir/installProguard/${rootProject.name}")

    // create a single jar out of all jars in the lib folder
    logger.info "Adding all jar from " + file(installDir.path + "/lib/").path
    def libDir = file(installDir.path + "/lib/")
    //injars libDir
    println libDir
    libDir.eachFileMatch(~'.*\\.jar') { file ->
        injars file.path, filter: '!META-INF/MANIFEST.MF'
    }
    def outDir = file(installProguardDir.path + "/lib/")
    outDir.mkdirs()

    ext.destFile = file(outDir.path + "/${jar.baseName}-${jar.version}.proguard.${jar.extension}")
    outjars destFile

    libraryjars Os.isFamily(Os.FAMILY_MAC) ? '<java.home>/../Classes/classes.jar' : '<java.home>/lib/rt.jar'

    configuration 'greyfish-all.pro'

    logger.lifecycle "[Proguard] Generated processed JAR in ${destFile}"
    //TODO handle duplicate manifest files
    //TODO copy bin folder to installProguard
}

task proguardDistZip {
    dependsOn installAppProguard

    //TODO zip installProguard folder
}

