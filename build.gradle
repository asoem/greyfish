subprojects {
    apply plugin: 'java'
    sourceCompatibility = 1.7

    apply plugin: 'maven-publish'
    group = "org.asoem.greyfish"
    version = "1.1.0-SNAPSHOT"

    repositories {
        mavenLocal()
        mavenCentral()
    }

    task sourcesJar(type: Jar, dependsOn: classes) {
        classifier = 'sources'
        from sourceSets.main.allJava
    }

    task javadocJar(type: Jar, dependsOn: javadoc) {
        classifier = 'javadoc'
        from javadoc.destinationDir
    }

    artifacts {
        archives sourcesJar
        archives javadocJar
    }

    publishing {
        publications {
            mavenJava(MavenPublication) {
                from components.java
                artifact sourcesJar
                artifact javadocJar
            }
        }
    }

    test {
        include '**/*Test.class'
        exclude '**/Abstract*.class'
    }

    task integrationTest(type: Test, dependsOn: test) {
        include '**/*IT.class'
        exclude '**/Abstract*.class'
    }

    task acceptanceTest(type: Test, dependsOn: integrationTest) {
        include '**/*AT.class'
        exclude '**/Abstract*.class'
    }

    def getGitCommitHash = { ->
        def stdout = new ByteArrayOutputStream()
        exec {
            commandLine 'git', 'show', '-s', '--pretty=format:%H'
            standardOutput = stdout
        }
        return stdout.toString().trim()
    }

    jar {
        manifest {
            attributes("Git-Commit-Hash": getGitCommitHash())
        }
    }

    apply plugin: 'checkstyle'
    checkstyle {
        configFile = new File("${rootProject.projectDir}/config/checkstyle/checkstyle.xml")
        ignoreFailures = true
    }
}